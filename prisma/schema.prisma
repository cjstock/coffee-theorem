// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String? @db.LongText
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.LongText
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  beans         Bean[]
  accounts      Account[]
  sessions      Session[]
}

model Bean {
  id         String   @id @default(cuid())
  country    String
  region     String?
  process    String?
  variety    String?
  altitude   String?
  roast      String?
  isFavorite Boolean?
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?

  sellerTastingNotes String?
  sellerBrewMethods  String?
  sellerDescription  String? @db.LongText
  sellerBuyLink      String?

  myTastingNotes    String?
  myBrewMethods     String?
  myAdditionalNotes String? @db.LongText
}

model Variety {
  id                 String  @id @default(cuid())
  name               String
  description        String?
  stature            Int?
  leafTipColor       String?
  beanSize           Int?
  qualPotHighAlt     Int?
  yieldPot           Int?
  coffeeLeafRust     Int?
  coffeeBerryDisease Int?
  nematodes          Int?
  yearOfFirstProd    Int?
  nutReq             Int?
  lineage            String?
  breeder            String?
  history            String? @db.LongText
}
